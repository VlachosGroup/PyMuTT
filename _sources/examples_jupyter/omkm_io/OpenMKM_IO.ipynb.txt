{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# OpenMKM Input and Output\n",
    "This notebook describes pmutt's functionality to read and write OpenMKM CTI files. We will use the NH3 formation mechanism as a case study.\n",
    "\n",
    "## Topics Covered\n",
    "- Read species *ab-initio* data, reactions, lateral interactions and phases from a spreadsheet\n",
    "- Write the CTI file that can be read by OpenMKM"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Input Spreadsheet\n",
    "All the data will be imported from the [`./inputs/NH3_Input_data.xlsx`](https://github.com/VlachosGroup/pmutt/blob/master/docs/source/examples_jupyter/openmkm_io/inputs/NH3_Input_Data.xlsx) file. There are five sheets:\n",
    "1. `refs` contains *ab-initio* and experimental data for a handful of gas species to calculate references\n",
    "2. `species` contains *ab-initio* data for each specie\n",
    "3. `beps` contains Bronsted-Evans-Polanyi relationships for reactions\n",
    "4. `reactions` contains elementary steps\n",
    "5. `lateral_interactions` contains lateral interactions between species\n",
    "6. `phases` contains phases for the species"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "First, we change the working directory to the location of the Jupyter notebook."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import os\n",
    "from pathlib import Path\n",
    "\n",
    "# Find the location of Jupyter notebook\n",
    "# Note that normally Python scripts have a __file__ variable but Jupyter notebook doesn't.\n",
    "# Using pathlib can overcome this limiation\n",
    "try:\n",
    "    notebook_path = os.path.dirname(__file__)\n",
    "except NameError:\n",
    "    notebook_path = Path().resolve()\n",
    "    \n",
    "os.chdir(notebook_path)\n",
    "input_path = './inputs/NH3_Input_Data_new.xlsx'"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Below is a helper function to print tables easily."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "from IPython.display import display\n",
    "\n",
    "def disp_data(io, sheet_name):\n",
    "    data = pd.read_excel(io=io, sheet_name=sheet_name, skiprows=[1])\n",
    "    data = data.fillna(' ')\n",
    "    display(data)    "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**References**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>name</th>\n",
       "      <th>elements.N</th>\n",
       "      <th>elements.H</th>\n",
       "      <th>elements.Ru</th>\n",
       "      <th>T_ref</th>\n",
       "      <th>HoRT_ref</th>\n",
       "      <th>potentialenergy</th>\n",
       "      <th>symmetrynumber</th>\n",
       "      <th>statmech_model</th>\n",
       "      <th>atoms</th>\n",
       "      <th>vib_wavenumber</th>\n",
       "      <th>vib_wavenumber.1</th>\n",
       "      <th>vib_wavenumber.2</th>\n",
       "      <th>vib_wavenumber.3</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>N2</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>298.15</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>-16.63</td>\n",
       "      <td>2</td>\n",
       "      <td>IdealGas</td>\n",
       "      <td>./N2/CONTCAR</td>\n",
       "      <td>2744</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>NH3</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>298.15</td>\n",
       "      <td>-18.380253</td>\n",
       "      <td>-19.54</td>\n",
       "      <td>3</td>\n",
       "      <td>IdealGas</td>\n",
       "      <td>./NH3/CONTCAR</td>\n",
       "      <td>3534</td>\n",
       "      <td>3464</td>\n",
       "      <td>1765</td>\n",
       "      <td>1139</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>H2</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>298.15</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>-6.77</td>\n",
       "      <td>2</td>\n",
       "      <td>IdealGas</td>\n",
       "      <td>./H2/CONTCAR</td>\n",
       "      <td>4342</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Ru</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>298.15</td>\n",
       "      <td>0.000000</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>Placeholder</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  name  elements.N  elements.H  elements.Ru   T_ref   HoRT_ref  \\\n",
       "0   N2           2           0            0  298.15   0.000000   \n",
       "1  NH3           1           3            0  298.15 -18.380253   \n",
       "2   H2           0           2            0  298.15   0.000000   \n",
       "3   Ru           0           0            1  298.15   0.000000   \n",
       "\n",
       "  potentialenergy symmetrynumber statmech_model          atoms vib_wavenumber  \\\n",
       "0          -16.63              2       IdealGas   ./N2/CONTCAR           2744   \n",
       "1          -19.54              3       IdealGas  ./NH3/CONTCAR           3534   \n",
       "2           -6.77              2       IdealGas   ./H2/CONTCAR           4342   \n",
       "3                                   Placeholder                                 \n",
       "\n",
       "  vib_wavenumber.1 vib_wavenumber.2 vib_wavenumber.3  \n",
       "0                                                     \n",
       "1             3464             1765             1139  \n",
       "2                                                     \n",
       "3                                                     "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "disp_data(io=input_path, sheet_name='refs')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Species**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>name</th>\n",
       "      <th>elements.N</th>\n",
       "      <th>elements.H</th>\n",
       "      <th>elements.Ru</th>\n",
       "      <th>phase</th>\n",
       "      <th>n_sites</th>\n",
       "      <th>statmech_model</th>\n",
       "      <th>symmetrynumber</th>\n",
       "      <th>atoms</th>\n",
       "      <th>potentialenergy</th>\n",
       "      <th>...</th>\n",
       "      <th>vib_wavenumber.2</th>\n",
       "      <th>vib_wavenumber.3</th>\n",
       "      <th>vib_wavenumber.4</th>\n",
       "      <th>vib_wavenumber.5</th>\n",
       "      <th>vib_wavenumber.6</th>\n",
       "      <th>vib_wavenumber.7</th>\n",
       "      <th>vib_wavenumber.8</th>\n",
       "      <th>vib_wavenumber.9</th>\n",
       "      <th>vib_wavenumber.10</th>\n",
       "      <th>vib_wavenumber.11</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>N2</td>\n",
       "      <td>2</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>gas</td>\n",
       "      <td></td>\n",
       "      <td>IdealGas</td>\n",
       "      <td>2</td>\n",
       "      <td>./N2/CONTCAR</td>\n",
       "      <td>-16.63</td>\n",
       "      <td>...</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>NH3</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td></td>\n",
       "      <td>gas</td>\n",
       "      <td></td>\n",
       "      <td>IdealGas</td>\n",
       "      <td>3</td>\n",
       "      <td>./NH3/CONTCAR</td>\n",
       "      <td>-19.54</td>\n",
       "      <td>...</td>\n",
       "      <td>1765</td>\n",
       "      <td>1139</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>H2</td>\n",
       "      <td></td>\n",
       "      <td>2</td>\n",
       "      <td></td>\n",
       "      <td>gas</td>\n",
       "      <td></td>\n",
       "      <td>IdealGas</td>\n",
       "      <td>2</td>\n",
       "      <td>./H2/CONTCAR</td>\n",
       "      <td>-6.77</td>\n",
       "      <td>...</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>N2(T)</td>\n",
       "      <td>2</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>terrace</td>\n",
       "      <td>1</td>\n",
       "      <td>Harmonic</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>-17.24</td>\n",
       "      <td>...</td>\n",
       "      <td>347.343</td>\n",
       "      <td>335.674</td>\n",
       "      <td>62.076</td>\n",
       "      <td>32.1794</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>N(T)</td>\n",
       "      <td>1</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>terrace</td>\n",
       "      <td>1</td>\n",
       "      <td>Harmonic</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>-9.34</td>\n",
       "      <td>...</td>\n",
       "      <td>475.454</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>H(T)</td>\n",
       "      <td></td>\n",
       "      <td>1</td>\n",
       "      <td></td>\n",
       "      <td>terrace</td>\n",
       "      <td>1</td>\n",
       "      <td>Harmonic</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>-4</td>\n",
       "      <td>...</td>\n",
       "      <td>797.904</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>NH3(T)</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td></td>\n",
       "      <td>terrace</td>\n",
       "      <td>1</td>\n",
       "      <td>Harmonic</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>-20.43</td>\n",
       "      <td>...</td>\n",
       "      <td>3364.52</td>\n",
       "      <td>1583.52</td>\n",
       "      <td>1582.07</td>\n",
       "      <td>1124.22</td>\n",
       "      <td>570.212</td>\n",
       "      <td>567.221</td>\n",
       "      <td>333.09</td>\n",
       "      <td>122.859</td>\n",
       "      <td>83.8286</td>\n",
       "      <td>70.6251</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>NH2(T)</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td></td>\n",
       "      <td>terrace</td>\n",
       "      <td>1</td>\n",
       "      <td>Harmonic</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>-16.59</td>\n",
       "      <td>...</td>\n",
       "      <td>1503.02</td>\n",
       "      <td>698.869</td>\n",
       "      <td>625.596</td>\n",
       "      <td>615.94</td>\n",
       "      <td>475.13</td>\n",
       "      <td>298.12</td>\n",
       "      <td>153.25</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>NH(T)</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td></td>\n",
       "      <td>terrace</td>\n",
       "      <td>1</td>\n",
       "      <td>Harmonic</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>-13.21</td>\n",
       "      <td>...</td>\n",
       "      <td>710.581</td>\n",
       "      <td>528.526</td>\n",
       "      <td>415.196</td>\n",
       "      <td>410.131</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>TS1_NH3(T)</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>1</td>\n",
       "      <td>Harmonic</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>-19.24</td>\n",
       "      <td>...</td>\n",
       "      <td>1723.85</td>\n",
       "      <td>1487.95</td>\n",
       "      <td>959.151</td>\n",
       "      <td>888.946</td>\n",
       "      <td>594.089</td>\n",
       "      <td>428.431</td>\n",
       "      <td>227.032</td>\n",
       "      <td>206.047</td>\n",
       "      <td>142.136</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>TS2_NH2(T)</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>1</td>\n",
       "      <td>Harmonic</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>-15.87</td>\n",
       "      <td>...</td>\n",
       "      <td>922.831</td>\n",
       "      <td>660.967</td>\n",
       "      <td>525.595</td>\n",
       "      <td>496.837</td>\n",
       "      <td>330.674</td>\n",
       "      <td>290.278</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>TS3_NH(T)</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>1</td>\n",
       "      <td>Harmonic</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>-11.93</td>\n",
       "      <td>...</td>\n",
       "      <td>462.016</td>\n",
       "      <td>402.159</td>\n",
       "      <td>242.139</td>\n",
       "      <td>1172.17</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>TS4_N2(T)</td>\n",
       "      <td>2</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>1</td>\n",
       "      <td>Harmonic</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>-15.7</td>\n",
       "      <td>...</td>\n",
       "      <td>386.186</td>\n",
       "      <td>280.943</td>\n",
       "      <td>168.431</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>RU(T)</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>1</td>\n",
       "      <td>terrace</td>\n",
       "      <td>1</td>\n",
       "      <td>Placeholder</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>...</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>N2(S)</td>\n",
       "      <td>2</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>step</td>\n",
       "      <td>1</td>\n",
       "      <td>Harmonic</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>-17.39</td>\n",
       "      <td>...</td>\n",
       "      <td>408.127</td>\n",
       "      <td>378.517</td>\n",
       "      <td>344.871</td>\n",
       "      <td>334.622</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>N(S)</td>\n",
       "      <td>1</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>step</td>\n",
       "      <td>1</td>\n",
       "      <td>Harmonic</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>-9.39</td>\n",
       "      <td>...</td>\n",
       "      <td>471.098</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>H(S)</td>\n",
       "      <td></td>\n",
       "      <td>1</td>\n",
       "      <td></td>\n",
       "      <td>step</td>\n",
       "      <td>1</td>\n",
       "      <td>Harmonic</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>-4</td>\n",
       "      <td>...</td>\n",
       "      <td>301.187</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>NH3(S)</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td></td>\n",
       "      <td>step</td>\n",
       "      <td>1</td>\n",
       "      <td>Harmonic</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>-20.68</td>\n",
       "      <td>...</td>\n",
       "      <td>3362.81</td>\n",
       "      <td>1590.91</td>\n",
       "      <td>1579.27</td>\n",
       "      <td>1140.76</td>\n",
       "      <td>564.975</td>\n",
       "      <td>555.5</td>\n",
       "      <td>336.1</td>\n",
       "      <td>117.162</td>\n",
       "      <td>86.7744</td>\n",
       "      <td>78.1001</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>NH2(S)</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td></td>\n",
       "      <td>step</td>\n",
       "      <td>1</td>\n",
       "      <td>Harmonic</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>-17.15</td>\n",
       "      <td>...</td>\n",
       "      <td>1477.16</td>\n",
       "      <td>720.076</td>\n",
       "      <td>615.666</td>\n",
       "      <td>581.967</td>\n",
       "      <td>468.853</td>\n",
       "      <td>286.37</td>\n",
       "      <td>105.957</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>NH(S)</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td></td>\n",
       "      <td>step</td>\n",
       "      <td>1</td>\n",
       "      <td>Harmonic</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>-13.11</td>\n",
       "      <td>...</td>\n",
       "      <td>669.429</td>\n",
       "      <td>506.278</td>\n",
       "      <td>409.502</td>\n",
       "      <td>387.808</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>TS1_NH3(S)</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>1</td>\n",
       "      <td>Harmonic</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>-19.81</td>\n",
       "      <td>...</td>\n",
       "      <td>1685.83</td>\n",
       "      <td>1481</td>\n",
       "      <td>1002.07</td>\n",
       "      <td>916.147</td>\n",
       "      <td>575.405</td>\n",
       "      <td>431.307</td>\n",
       "      <td>345.149</td>\n",
       "      <td>221.65</td>\n",
       "      <td>70.3397</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>TS2_NH2(S)</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>1</td>\n",
       "      <td>Harmonic</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>-15.82</td>\n",
       "      <td>...</td>\n",
       "      <td>1032.19</td>\n",
       "      <td>583.479</td>\n",
       "      <td>392.837</td>\n",
       "      <td>384.834</td>\n",
       "      <td>311.601</td>\n",
       "      <td>110.969</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>TS3_NH(S)</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>1</td>\n",
       "      <td>Harmonic</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>-12.12</td>\n",
       "      <td>...</td>\n",
       "      <td>489.065</td>\n",
       "      <td>443.451</td>\n",
       "      <td>396.193</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>TS4_N2(S)</td>\n",
       "      <td>2</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>1</td>\n",
       "      <td>Harmonic</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>-16.8</td>\n",
       "      <td>...</td>\n",
       "      <td>436.166</td>\n",
       "      <td>418.367</td>\n",
       "      <td>391.943</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>RU(S)</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>1</td>\n",
       "      <td>step</td>\n",
       "      <td>1</td>\n",
       "      <td>Placeholder</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>...</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>RU(B)</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>1</td>\n",
       "      <td>bulk</td>\n",
       "      <td>1</td>\n",
       "      <td>Placeholder</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>...</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>26 rows × 22 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "          name elements.N elements.H elements.Ru    phase n_sites  \\\n",
       "0           N2          2                             gas           \n",
       "1          NH3          1          3                  gas           \n",
       "2           H2                     2                  gas           \n",
       "3        N2(T)          2                         terrace       1   \n",
       "4         N(T)          1                         terrace       1   \n",
       "5         H(T)                     1              terrace       1   \n",
       "6       NH3(T)          1          3              terrace       1   \n",
       "7       NH2(T)          1          2              terrace       1   \n",
       "8        NH(T)          1          1              terrace       1   \n",
       "9   TS1_NH3(T)          1          3                            1   \n",
       "10  TS2_NH2(T)          1          2                            1   \n",
       "11   TS3_NH(T)          1          1                            1   \n",
       "12   TS4_N2(T)          2                                       1   \n",
       "13       RU(T)                                 1  terrace       1   \n",
       "14       N2(S)          2                            step       1   \n",
       "15        N(S)          1                            step       1   \n",
       "16        H(S)                     1                 step       1   \n",
       "17      NH3(S)          1          3                 step       1   \n",
       "18      NH2(S)          1          2                 step       1   \n",
       "19       NH(S)          1          1                 step       1   \n",
       "20  TS1_NH3(S)          1          3                            1   \n",
       "21  TS2_NH2(S)          1          2                            1   \n",
       "22   TS3_NH(S)          1          1                            1   \n",
       "23   TS4_N2(S)          2                                       1   \n",
       "24       RU(S)                                 1     step       1   \n",
       "25       RU(B)                                 1     bulk       1   \n",
       "\n",
       "   statmech_model symmetrynumber          atoms potentialenergy  ...  \\\n",
       "0        IdealGas              2   ./N2/CONTCAR          -16.63  ...   \n",
       "1        IdealGas              3  ./NH3/CONTCAR          -19.54  ...   \n",
       "2        IdealGas              2   ./H2/CONTCAR           -6.77  ...   \n",
       "3        Harmonic                                        -17.24  ...   \n",
       "4        Harmonic                                         -9.34  ...   \n",
       "5        Harmonic                                            -4  ...   \n",
       "6        Harmonic                                        -20.43  ...   \n",
       "7        Harmonic                                        -16.59  ...   \n",
       "8        Harmonic                                        -13.21  ...   \n",
       "9        Harmonic                                        -19.24  ...   \n",
       "10       Harmonic                                        -15.87  ...   \n",
       "11       Harmonic                                        -11.93  ...   \n",
       "12       Harmonic                                         -15.7  ...   \n",
       "13    Placeholder                                                ...   \n",
       "14       Harmonic                                        -17.39  ...   \n",
       "15       Harmonic                                         -9.39  ...   \n",
       "16       Harmonic                                            -4  ...   \n",
       "17       Harmonic                                        -20.68  ...   \n",
       "18       Harmonic                                        -17.15  ...   \n",
       "19       Harmonic                                        -13.11  ...   \n",
       "20       Harmonic                                        -19.81  ...   \n",
       "21       Harmonic                                        -15.82  ...   \n",
       "22       Harmonic                                        -12.12  ...   \n",
       "23       Harmonic                                         -16.8  ...   \n",
       "24    Placeholder                                                ...   \n",
       "25    Placeholder                                                ...   \n",
       "\n",
       "   vib_wavenumber.2 vib_wavenumber.3 vib_wavenumber.4 vib_wavenumber.5  \\\n",
       "0                                                                        \n",
       "1              1765             1139                                     \n",
       "2                                                                        \n",
       "3           347.343          335.674           62.076          32.1794   \n",
       "4           475.454                                                      \n",
       "5           797.904                                                      \n",
       "6           3364.52          1583.52          1582.07          1124.22   \n",
       "7           1503.02          698.869          625.596           615.94   \n",
       "8           710.581          528.526          415.196          410.131   \n",
       "9           1723.85          1487.95          959.151          888.946   \n",
       "10          922.831          660.967          525.595          496.837   \n",
       "11          462.016          402.159          242.139          1172.17   \n",
       "12          386.186          280.943          168.431                    \n",
       "13                                                                       \n",
       "14          408.127          378.517          344.871          334.622   \n",
       "15          471.098                                                      \n",
       "16          301.187                                                      \n",
       "17          3362.81          1590.91          1579.27          1140.76   \n",
       "18          1477.16          720.076          615.666          581.967   \n",
       "19          669.429          506.278          409.502          387.808   \n",
       "20          1685.83             1481          1002.07          916.147   \n",
       "21          1032.19          583.479          392.837          384.834   \n",
       "22          489.065          443.451          396.193                    \n",
       "23          436.166          418.367          391.943                    \n",
       "24                                                                       \n",
       "25                                                                       \n",
       "\n",
       "   vib_wavenumber.6 vib_wavenumber.7 vib_wavenumber.8 vib_wavenumber.9  \\\n",
       "0                                                                        \n",
       "1                                                                        \n",
       "2                                                                        \n",
       "3                                                                        \n",
       "4                                                                        \n",
       "5                                                                        \n",
       "6           570.212          567.221           333.09          122.859   \n",
       "7            475.13           298.12           153.25                    \n",
       "8                                                                        \n",
       "9           594.089          428.431          227.032          206.047   \n",
       "10          330.674          290.278                                     \n",
       "11                                                                       \n",
       "12                                                                       \n",
       "13                                                                       \n",
       "14                                                                       \n",
       "15                                                                       \n",
       "16                                                                       \n",
       "17          564.975            555.5            336.1          117.162   \n",
       "18          468.853           286.37          105.957                    \n",
       "19                                                                       \n",
       "20          575.405          431.307          345.149           221.65   \n",
       "21          311.601          110.969                                     \n",
       "22                                                                       \n",
       "23                                                                       \n",
       "24                                                                       \n",
       "25                                                                       \n",
       "\n",
       "   vib_wavenumber.10 vib_wavenumber.11  \n",
       "0                                       \n",
       "1                                       \n",
       "2                                       \n",
       "3                                       \n",
       "4                                       \n",
       "5                                       \n",
       "6            83.8286           70.6251  \n",
       "7                                       \n",
       "8                                       \n",
       "9            142.136                    \n",
       "10                                      \n",
       "11                                      \n",
       "12                                      \n",
       "13                                      \n",
       "14                                      \n",
       "15                                      \n",
       "16                                      \n",
       "17           86.7744           78.1001  \n",
       "18                                      \n",
       "19                                      \n",
       "20           70.3397                    \n",
       "21                                      \n",
       "22                                      \n",
       "23                                      \n",
       "24                                      \n",
       "25                                      \n",
       "\n",
       "[26 rows x 22 columns]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "disp_data(io=input_path, sheet_name='species')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**BEPs**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>name</th>\n",
       "      <th>slope</th>\n",
       "      <th>intercept</th>\n",
       "      <th>direction</th>\n",
       "      <th>notes</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>N-H</td>\n",
       "      <td>0.29</td>\n",
       "      <td>23.23</td>\n",
       "      <td>cleavage</td>\n",
       "      <td>Values taken from https://github.com/VlachosGr...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>NH-H</td>\n",
       "      <td>0.52</td>\n",
       "      <td>19.78</td>\n",
       "      <td>cleavage</td>\n",
       "      <td>Values taken from https://github.com/VlachosGr...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>NH2-H</td>\n",
       "      <td>0.71</td>\n",
       "      <td>23.69</td>\n",
       "      <td>cleavage</td>\n",
       "      <td>Values taken from https://github.com/VlachosGr...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    name  slope  intercept direction  \\\n",
       "0    N-H   0.29      23.23  cleavage   \n",
       "1   NH-H   0.52      19.78  cleavage   \n",
       "2  NH2-H   0.71      23.69  cleavage   \n",
       "\n",
       "                                               notes  \n",
       "0  Values taken from https://github.com/VlachosGr...  \n",
       "1  Values taken from https://github.com/VlachosGr...  \n",
       "2  Values taken from https://github.com/VlachosGr...  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "disp_data(io=input_path, sheet_name='beps')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Reactions**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>reaction_str</th>\n",
       "      <th>is_adsorption</th>\n",
       "      <th>direction</th>\n",
       "      <th>id</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>H2 + 2RU(T) = 2H(T) + 2RU(B)</td>\n",
       "      <td>True</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>N2 + RU(T)  = N2(T) + RU(B)</td>\n",
       "      <td>True</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>NH3 + RU(T) = NH3(T) + RU(B)</td>\n",
       "      <td>True</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>NH3(T) + RU(T)= NH2-H = NH2(T) + H(T) + RU(B)</td>\n",
       "      <td>False</td>\n",
       "      <td>cleavage</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>NH2(T) + RU(T) = NH-H = NH(T)  + H(T) + RU(B)</td>\n",
       "      <td>False</td>\n",
       "      <td>cleavage</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>NH(T)  + RU(T) = N-H = N(T)   + H(T) + RU(B)</td>\n",
       "      <td>False</td>\n",
       "      <td>cleavage</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>2N(T) + RU(B) = TS4_N2(T) = N2(T)  +  RU(T)</td>\n",
       "      <td>False</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>H2 + 2RU(S) = 2H(S) + 2RU(B)</td>\n",
       "      <td>True</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>N2 + RU(S)  = N2(S) + RU(B)</td>\n",
       "      <td>True</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>NH3 + RU(S) = NH3(S) + RU(B)</td>\n",
       "      <td>True</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>NH3(S) + RU(S)= NH2-H = NH2(S) + H(S) + RU(B)</td>\n",
       "      <td>False</td>\n",
       "      <td>cleavage</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>NH2(S) + RU(S) = NH-H = NH(S)  + H(S) + RU(B)</td>\n",
       "      <td>False</td>\n",
       "      <td>cleavage</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>N(S) + H(S) + RU(B) = N-H = NH(S)  + RU(S)</td>\n",
       "      <td>False</td>\n",
       "      <td>synthesis</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>2N(S) + RU(B) = TS4_N2(S) = N2(S)  +  RU(S)</td>\n",
       "      <td>False</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                     reaction_str  is_adsorption  direction id\n",
       "0                    H2 + 2RU(T) = 2H(T) + 2RU(B)           True              \n",
       "1                     N2 + RU(T)  = N2(T) + RU(B)           True              \n",
       "2                    NH3 + RU(T) = NH3(T) + RU(B)           True              \n",
       "3   NH3(T) + RU(T)= NH2-H = NH2(T) + H(T) + RU(B)          False   cleavage   \n",
       "4   NH2(T) + RU(T) = NH-H = NH(T)  + H(T) + RU(B)          False   cleavage   \n",
       "5    NH(T)  + RU(T) = N-H = N(T)   + H(T) + RU(B)          False   cleavage   \n",
       "6     2N(T) + RU(B) = TS4_N2(T) = N2(T)  +  RU(T)          False              \n",
       "7                    H2 + 2RU(S) = 2H(S) + 2RU(B)           True              \n",
       "8                     N2 + RU(S)  = N2(S) + RU(B)           True              \n",
       "9                    NH3 + RU(S) = NH3(S) + RU(B)           True              \n",
       "10  NH3(S) + RU(S)= NH2-H = NH2(S) + H(S) + RU(B)          False   cleavage   \n",
       "11  NH2(S) + RU(S) = NH-H = NH(S)  + H(S) + RU(B)          False   cleavage   \n",
       "12     N(S) + H(S) + RU(B) = N-H = NH(S)  + RU(S)          False  synthesis   \n",
       "13    2N(S) + RU(B) = TS4_N2(S) = N2(S)  +  RU(S)          False              "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "disp_data(io=input_path, sheet_name='reactions')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Lateral Interactions**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>name_i</th>\n",
       "      <th>name_j</th>\n",
       "      <th>list.intervals</th>\n",
       "      <th>list.slopes</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>N(T)</td>\n",
       "      <td>N(T)</td>\n",
       "      <td>0</td>\n",
       "      <td>-52.6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>N(T)</td>\n",
       "      <td>H(T)</td>\n",
       "      <td>0</td>\n",
       "      <td>-17.7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>H(T)</td>\n",
       "      <td>N(T)</td>\n",
       "      <td>0</td>\n",
       "      <td>-17.7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>H(T)</td>\n",
       "      <td>H(T)</td>\n",
       "      <td>0</td>\n",
       "      <td>-3.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>NH2(T)</td>\n",
       "      <td>N(T)</td>\n",
       "      <td>0</td>\n",
       "      <td>-20.7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>N(S)</td>\n",
       "      <td>N(S)</td>\n",
       "      <td>0</td>\n",
       "      <td>-52.6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>N(S)</td>\n",
       "      <td>H(S)</td>\n",
       "      <td>0</td>\n",
       "      <td>-17.7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>H(S)</td>\n",
       "      <td>N(S)</td>\n",
       "      <td>0</td>\n",
       "      <td>-17.7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>H(S)</td>\n",
       "      <td>H(S)</td>\n",
       "      <td>0</td>\n",
       "      <td>-3.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>NH2(S)</td>\n",
       "      <td>N(S)</td>\n",
       "      <td>0</td>\n",
       "      <td>-20.7</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   name_i name_j  list.intervals  list.slopes\n",
       "0    N(T)   N(T)               0        -52.6\n",
       "1    N(T)   H(T)               0        -17.7\n",
       "2    H(T)   N(T)               0        -17.7\n",
       "3    H(T)   H(T)               0         -3.0\n",
       "4  NH2(T)   N(T)               0        -20.7\n",
       "5    N(S)   N(S)               0        -52.6\n",
       "6    N(S)   H(S)               0        -17.7\n",
       "7    H(S)   N(S)               0        -17.7\n",
       "8    H(S)   H(S)               0         -3.0\n",
       "9  NH2(S)   N(S)               0        -20.7"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "disp_data(io=input_path, sheet_name='lateral_interactions')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Phases**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>name</th>\n",
       "      <th>phase_type</th>\n",
       "      <th>density</th>\n",
       "      <th>site_density</th>\n",
       "      <th>list.phases</th>\n",
       "      <th>list.phases.1</th>\n",
       "      <th>dict.initial_state.RU(T)</th>\n",
       "      <th>dict.initial_state.RU(S)</th>\n",
       "      <th>dict.initial_state.NH3</th>\n",
       "      <th>note</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>gas</td>\n",
       "      <td>IdealGas</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>1</td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>bulk</td>\n",
       "      <td>StoichSolid</td>\n",
       "      <td>12.4</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>Ru Metal</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>terrace</td>\n",
       "      <td>InteractingInterface</td>\n",
       "      <td></td>\n",
       "      <td>2.1671e-09</td>\n",
       "      <td>gas</td>\n",
       "      <td>bulk</td>\n",
       "      <td>1</td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td>Surface: Ru0001(0T)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>step</td>\n",
       "      <td>InteractingInterface</td>\n",
       "      <td></td>\n",
       "      <td>4.4385e-10</td>\n",
       "      <td>gas</td>\n",
       "      <td>bulk</td>\n",
       "      <td></td>\n",
       "      <td>1</td>\n",
       "      <td></td>\n",
       "      <td>Surface: Ru0001(0S)</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      name            phase_type density site_density list.phases  \\\n",
       "0      gas              IdealGas                                    \n",
       "1     bulk           StoichSolid    12.4                            \n",
       "2  terrace  InteractingInterface           2.1671e-09         gas   \n",
       "3     step  InteractingInterface           4.4385e-10         gas   \n",
       "\n",
       "  list.phases.1 dict.initial_state.RU(T) dict.initial_state.RU(S)  \\\n",
       "0                                                                   \n",
       "1                                                                   \n",
       "2          bulk                        1                            \n",
       "3          bulk                                                 1   \n",
       "\n",
       "  dict.initial_state.NH3                 note  \n",
       "0                      1                       \n",
       "1                                    Ru Metal  \n",
       "2                         Surface: Ru0001(0T)  \n",
       "3                         Surface: Ru0001(0S)  "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "disp_data(io=input_path, sheet_name='phases')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Designate Units\n",
    "First, we will designate the units to write the CTI file."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [],
   "source": [
    "from pmutt.omkm.units import Units\n",
    "\n",
    "units = Units(length='cm', quantity='mol', act_energy='kcal/mol', mass='g', energy='kcal/mol')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Reading data\n",
    "Before we can initialize our species, we need the references.\n",
    "\n",
    "### Reading References (optional)\n",
    "We will open the [input spreadsheet](https://github.com/VlachosGroup/pmutt/blob/master/docs/source/examples_jupyter/openmkm_io/inputs/NH3_Input_Data.xlsx) and read the `refs` sheet."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [],
   "source": [
    "from pmutt.io.excel import read_excel\n",
    "from pmutt.empirical.references import Reference, References\n",
    "\n",
    "try:\n",
    "    refs_data = read_excel(io=input_path, sheet_name='refs')\n",
    "except:\n",
    "    # If references are not used, skip this section\n",
    "    refs = None\n",
    "else:\n",
    "    refs = [Reference(**ref_data) for ref_data in refs_data]\n",
    "    refs = References(references=refs)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Reading Species"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [],
   "source": [
    "from pmutt.empirical.nasa import Nasa\n",
    "\n",
    "# Lower and higher temperatures\n",
    "T_low = 298. # K\n",
    "T_high = 800. # K\n",
    "\n",
    "species_data = read_excel(io=input_path, sheet_name='species')\n",
    "species = []\n",
    "species_phases = {}\n",
    "for ind_species_data in species_data:\n",
    "    # Initialize NASA from statistical mechanical data\n",
    "    ind_species = Nasa.from_model(T_low=T_low, T_high=T_high, references=refs,\n",
    "                                  **ind_species_data)\n",
    "    species.append(ind_species)\n",
    "\n",
    "    # Group the species by phase for later use\n",
    "    try:\n",
    "        species_phases[ind_species.phase].append(ind_species)\n",
    "    except KeyError:\n",
    "        species_phases[ind_species.phase] = [ind_species]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Adding species from other empirical sources (optional)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "from pmutt.empirical.shomate import Shomate\n",
    "\n",
    "Ar = Shomate(name='Ar', elements={'Ar': 1}, phase='gas', T_low=298., T_high=6000.,\n",
    "             a=np.array([20.78600, 2.825911e-7, -1.464191e-7, 1.092131e-8, -3.661371e-8, -6.19735, 179.999, 0.]))\n",
    "\n",
    "species.append(Ar)\n",
    "species_phases['gas'].append(Ar)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Reading BEP (optional)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [],
   "source": [
    "from pmutt.omkm.reaction import BEP\n",
    "\n",
    "try:\n",
    "    beps_data = read_excel(io=input_path, sheet_name='beps')\n",
    "except:\n",
    "    beps = None\n",
    "    species_with_beps = species.copy()\n",
    "else:\n",
    "    beps = []\n",
    "    for bep_data in beps_data:\n",
    "        beps.append(BEP(**bep_data))\n",
    "\n",
    "    # Combine species and BEPs to make reactions\n",
    "    species_with_beps = species + beps"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Read reactions"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [],
   "source": [
    "from pmutt import pmutt_list_to_dict\n",
    "from pmutt.omkm.reaction import SurfaceReaction\n",
    "\n",
    "# Convert species to dictionary for easier reaction assignment\n",
    "species_with_beps_dict = pmutt_list_to_dict(species_with_beps)\n",
    "reactions_data = read_excel(io=input_path, sheet_name='reactions')\n",
    "reactions = []\n",
    "# Store information about phases for later retrieval\n",
    "reaction_phases = {}\n",
    "for reaction_data in reactions_data:\n",
    "    reaction = SurfaceReaction.from_string(species=species_with_beps_dict,\n",
    "                                           **reaction_data)\n",
    "    reactions.append(reaction)\n",
    "    # Assign phase information\n",
    "    reaction_species = reaction.get_species(include_TS=True)\n",
    "    for ind_species in reaction_species.values():\n",
    "        try:\n",
    "            phase = ind_species.phase\n",
    "        except AttributeError:\n",
    "            pass\n",
    "        # Assign if key already exists\n",
    "        if phase in reaction_phases:\n",
    "            if reaction not in reaction_phases[phase]:\n",
    "                reaction_phases[phase].append(reaction)\n",
    "        else:\n",
    "            reaction_phases[phase] = [reaction]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Read lateral interactions (optional)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [],
   "source": [
    "from pmutt.mixture.cov import PiecewiseCovEffect\n",
    "\n",
    "try:\n",
    "    interactions_data = read_excel(io=input_path, sheet_name='lateral_interactions')\n",
    "except:\n",
    "    # If no lateral interactions exist, skip this section\n",
    "    interactions = None\n",
    "else:\n",
    "    interactions = []\n",
    "    interaction_phases = {}\n",
    "    for interaction_data in interactions_data:\n",
    "        interaction = PiecewiseCovEffect(**interaction_data)\n",
    "        interactions.append(interaction)\n",
    "\n",
    "        # Assign phase information\n",
    "        phase = species_with_beps_dict[interaction.name_i].phase\n",
    "        # Assign if key already exists\n",
    "        if phase in interaction_phases:\n",
    "            if interaction not in interaction_phases[phase]:\n",
    "                interaction_phases[phase].append(interaction)\n",
    "        else:\n",
    "            interaction_phases[phase] = [interaction]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Reading Phases"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [],
   "source": [
    "from pmutt.omkm.phase import IdealGas, InteractingInterface, StoichSolid\n",
    "\n",
    "phases_data = read_excel(io=input_path, sheet_name='phases')\n",
    "phases = []\n",
    "# Group data related to previously collected data\n",
    "additional_fields = {'species': species_phases,\n",
    "                     'reactions': reaction_phases,\n",
    "                     'interactions': interaction_phases}\n",
    "for phase_data in phases_data:\n",
    "    # Pre-processing relevant data\n",
    "    phase_name = phase_data['name']\n",
    "    phase_type = phase_data.pop('phase_type')\n",
    "\n",
    "    # Add additional fields to phase data if present\n",
    "    for field, phase_dict in additional_fields.items():\n",
    "        try:\n",
    "            phase_data[field] = phase_dict[phase_name]\n",
    "        except (NameError, KeyError):\n",
    "            pass\n",
    "\n",
    "    # Create the appropriate object\n",
    "    if phase_type == 'IdealGas':\n",
    "        # Special rule where reactions are only in the gas phase if\n",
    "        # all species belong to the gas phase\n",
    "        del_indices = []\n",
    "        for i, reaction in enumerate(phase_data['reactions']):\n",
    "            # Reaction will be deleted if any of the species are a different phase\n",
    "            valid_rxn = True\n",
    "            for ind_species in reaction.get_species(include_TS=False).values():\n",
    "                try:\n",
    "                    ind_species_phase = ind_species.phase\n",
    "                except AttributeError:\n",
    "                    valid_rxn = False\n",
    "                else:\n",
    "                    if ind_species_phase != phase_name:\n",
    "                        valid_rxn = False\n",
    "                # Record reaction index if not valid\n",
    "                if not valid_rxn:\n",
    "                    del_indices.append(i)\n",
    "                    break\n",
    "        # Delete reactions that do not qualify\n",
    "        if len(del_indices) == len(phase_data['reactions']):\n",
    "            phase_data.pop('reactions')\n",
    "        else:\n",
    "            for del_i in sorted(del_indices, reverse=True):\n",
    "                del phase_data['reactions'][del_i]\n",
    "        phase = IdealGas(**phase_data)\n",
    "    elif phase_type == 'StoichSolid':\n",
    "        phase = StoichSolid(**phase_data)\n",
    "    elif phase_type == 'InteractingInterface':\n",
    "        phase = InteractingInterface(**phase_data)\n",
    "    phases.append(phase)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Write CTI File"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [],
   "source": [
    "from pmutt.io.omkm import write_cti\n",
    "\n",
    "cti_path = './outputs/thermo.cti'\n",
    "use_motz_wise = True\n",
    "\n",
    "write_cti(reactions=reactions, species=species, phases=phases, units=units,\n",
    "          lateral_interactions=interactions, filename=cti_path,\n",
    "          use_motz_wise=use_motz_wise)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "If you would prefer to return the file as a string instead of writing it, omit the ``filename``."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "# File generated by pMuTT (v 1.2.14) on 2019-12-05 16:55:39.859601\n",
      "# See documentation for OpenMKM CTI file here:\n",
      "# https://vlachosgroup.github.io/openmkm/input\n",
      "\n",
      "#-------------------------------------------------------------------------------\n",
      "# UNITS\n",
      "#-------------------------------------------------------------------------------\n",
      "units(length=\"cm\", time=\"s\", quantity=\"mol\", energy=\"kcal/mol\",\n",
      "      act_energy=\"kcal/mol\", pressure=\"bar\", mass=\"g\")\n",
      "\n",
      "#-------------------------------------------------------------------------------\n",
      "# PHASES\n",
      "#-------------------------------------------------------------------------------\n",
      "ideal_gas(name=\"gas\",\n",
      "          elements=\"H Ar N\",\n",
      "          species=\"N2 NH3 H2 Ar\")\n",
      "\n",
      "stoichiometric_solid(name=\"bulk\",\n",
      "                     elements=\"Ru\",\n",
      "                     species=\"RU(B)\",\n",
      "                     density=12.4,\n",
      "                     note=\"Ru Metal\")\n",
      "\n",
      "interacting_interface(name=\"terrace\",\n",
      "                      elements=\"Ru H N\",\n",
      "                      species=\"N2(T) N(T) H(T) NH3(T) NH2(T) NH(T) RU(T)\",\n",
      "                      phases=\"gas bulk\",\n",
      "                      site_density=2.1671e-09,\n",
      "                      interactions=[\"0000 to 0004\"],\n",
      "                      reactions=[\"0000 to 0003\", \"NH2-H_cle_0001\", \"NH-H_cle_0001\", \"N-H_cle_0001\"],\n",
      "                      beps=\"NH2-H NH-H N-H\",\n",
      "                      note=\"Surface: Ru0001(0T)\")\n",
      "\n",
      "interacting_interface(name=\"step\",\n",
      "                      elements=\"Ru H N\",\n",
      "                      species=\"N2(S) N(S) H(S) NH3(S) NH2(S) NH(S) RU(S)\",\n",
      "                      phases=\"gas bulk\",\n",
      "                      site_density=4.4385e-10,\n",
      "                      interactions=[\"0005 to 0009\"],\n",
      "                      reactions=[\"0004 to 0007\", \"NH2-H_cle_0002\", \"NH-H_cle_0002\", \"N-H_syn_0001\"],\n",
      "                      beps=\"NH2-H NH-H N-H\",\n",
      "                      note=\"Surface: Ru0001(0S)\")\n",
      "\n",
      "\n",
      "#-------------------------------------------------------------------------------\n",
      "# SPECIES\n",
      "#-------------------------------------------------------------------------------\n",
      "species(name=\"N2\", atoms=\"N:2\",\n",
      "        thermo=(NASA([298.0, 523.3877551020408],\n",
      "                     [ 3.41792195E+00,  8.91688129E-04, -3.46864753E-06,\n",
      "                       5.44691795E-09, -2.46804017E-12, -1.27218598E+02,\n",
      "                       3.46925446E+00]),\n",
      "                NASA([523.3877551020408, 800.0], \n",
      "                     [ 3.75207309E+00, -1.30159027E-03,  1.83848785E-06,\n",
      "                      -1.17413430E-10, -3.65391117E-13, -1.67466046E+02,\n",
      "                       2.02487235E+00])))\n",
      "\n",
      "species(name=\"NH3\", atoms=\"N:1 H:3\",\n",
      "        thermo=(NASA([298.0, 533.6326530612245],\n",
      "                     [ 4.57124680E+00, -6.89724277E-03,  2.70972941E-05,\n",
      "                      -3.44331645E-08,  1.62568430E-11, -8.53630392E+03,\n",
      "                      -1.78236482E+00]),\n",
      "                NASA([533.6326530612245, 800.0], \n",
      "                     [ 3.29427463E+00,  2.57481517E-03,  5.20883059E-07,\n",
      "                      -1.00678313E-09,  3.59356180E-13, -8.39739729E+03,\n",
      "                       3.59518179E+00])))\n",
      "\n",
      "species(name=\"H2\", atoms=\"H:2\",\n",
      "        thermo=(NASA([298.0, 574.6122448979592],\n",
      "                     [ 3.50717925E+00, -8.50397135E-05,  3.79570576E-07,\n",
      "                      -7.57943298E-10,  5.72423558E-13,  1.68725521E+03,\n",
      "                      -4.30359616E+00]),\n",
      "                NASA([574.6122448979592, 800.0], \n",
      "                     [ 3.37903251E+00,  7.92301907E-04, -1.88662952E-06,\n",
      "                       1.85974220E-09, -5.68447254E-13,  1.70231785E+03,\n",
      "                      -3.75384878E+00])))\n",
      "\n",
      "species(name=\"N2(T)\", atoms=\"N:2\", size=1.0,\n",
      "        thermo=(NASA([298.0, 482.40816326530614],\n",
      "                     [ 4.40553502E-01,  2.97759950E-02, -8.47698148E-05,\n",
      "                       1.16195177E-07, -6.12938589E-11, -6.81713036E+03,\n",
      "                      -1.67535850E+00]),\n",
      "                NASA([482.40816326530614, 800.0], \n",
      "                     [ 3.42605836E+00,  5.03710708E-03, -6.92689694E-06,\n",
      "                       6.03246113E-09, -2.18862675E-12, -7.10908593E+03,\n",
      "                      -1.39234158E+01])))\n",
      "\n",
      "species(name=\"N(T)\", atoms=\"N:1\", size=1.0,\n",
      "        thermo=(NASA([298.0, 502.8979591836735],\n",
      "                     [-2.71919709E+00,  3.10380428E-02, -7.47540324E-05,\n",
      "                       8.80723495E-08, -4.13433358E-11, -1.17234740E+04,\n",
      "                       9.87371796E+00]),\n",
      "                NASA([502.8979591836735, 800.0], \n",
      "                     [-4.95025620E-01,  1.35335640E-02, -2.24535501E-05,\n",
      "                       1.77837392E-08, -5.51569290E-12, -1.19523504E+04,\n",
      "                       6.34927104E-01])))\n",
      "\n",
      "species(name=\"H(T)\", atoms=\"H:1\", size=1.0,\n",
      "        thermo=(NASA([298.0, 441.42857142857144],\n",
      "                     [ 7.91313413E-03, -7.18474094E-03,  6.12598221E-05,\n",
      "                      -1.16096739E-07,  7.32821052E-11, -5.91165950E+03,\n",
      "                       4.99271810E-01]),\n",
      "                NASA([441.42857142857144, 800.0], \n",
      "                     [-2.64946668E+00,  1.72104629E-02, -2.34720423E-05,\n",
      "                       1.57764790E-08, -4.25231915E-12, -5.67788486E+03,\n",
      "                       1.11243195E+01])))\n",
      "\n",
      "species(name=\"NH3(T)\", atoms=\"N:1 H:3\", size=1.0,\n",
      "        thermo=(NASA([298.0, 461.9183673469388],\n",
      "                     [ 1.16759533E+00,  2.05732170E-02, -3.66958772E-05,\n",
      "                       4.56112325E-08, -2.49628744E-11, -1.42311185E+04,\n",
      "                      -4.80504278E+00]),\n",
      "                NASA([461.9183673469388, 800.0], \n",
      "                     [ 1.58312977E+00,  1.57753291E-02, -1.71587153E-05,\n",
      "                       1.15414255E-08, -3.21958978E-12, -1.42567384E+04,\n",
      "                      -6.35076167E+00])))\n",
      "\n",
      "species(name=\"NH2(T)\", atoms=\"N:1 H:2\", size=1.0,\n",
      "        thermo=(NASA([298.0, 523.3877551020408],\n",
      "                     [-2.56305506E+00,  3.84726874E-02, -7.73503504E-05,\n",
      "                       8.09903199E-08, -3.43595838E-11, -1.17458655E+04,\n",
      "                       8.90806366E+00]),\n",
      "                NASA([523.3877551020408, 800.0], \n",
      "                     [-6.86530719E-01,  2.43298826E-02, -3.68705157E-05,\n",
      "                       2.88483783E-08, -8.86963660E-12, -1.19475373E+04,\n",
      "                       1.03191178E+00])))\n",
      "\n",
      "species(name=\"NH(T)\", atoms=\"N:1 H:1\", size=1.0,\n",
      "        thermo=(NASA([298.0, 543.8775510204082],\n",
      "                     [-3.73687435E+00,  4.05226889E-02, -8.44226964E-05,\n",
      "                       8.65932632E-08, -3.53036247E-11, -1.46202196E+04,\n",
      "                       1.37781588E+01]),\n",
      "                NASA([543.8775510204082, 800.0], \n",
      "                     [-1.33660645E+00,  2.33106600E-02, -3.77180253E-05,\n",
      "                       2.97486446E-08, -9.12157176E-12, -1.48903410E+04,\n",
      "                       3.58875263E+00])))\n",
      "\n",
      "species(name=\"TS1_NH3(T)\", atoms=\"N:1 H:3\", size=1.0,\n",
      "        thermo=(NASA([298.0, 451.67346938775506],\n",
      "                     [ 4.96418515E-02,  2.15674671E-02, -2.75604959E-05,\n",
      "                       2.23225323E-08, -8.79255935E-12, -2.50469914E+03,\n",
      "                      -1.46480767E+00]),\n",
      "                NASA([451.67346938775506, 800.0], \n",
      "                     [ 5.21221040E-02,  2.11615812E-02, -2.49542203E-05,\n",
      "                       1.66204937E-08, -4.59897868E-12, -2.50090675E+03,\n",
      "                      -1.43098814E+00])))\n",
      "\n",
      "species(name=\"TS2_NH2(T)\", atoms=\"N:1 H:2\", size=1.0,\n",
      "        thermo=(NASA([298.0, 554.1224489795918],\n",
      "                     [-2.58881424E+00,  3.43781302E-02, -5.87419101E-05,\n",
      "                       5.18321984E-08, -1.87340797E-11, -5.75828326E+03,\n",
      "                       8.95651588E+00]),\n",
      "                NASA([554.1224489795918, 800.0], \n",
      "                     [-1.48538501E+00,  2.67287608E-02, -3.86606417E-05,\n",
      "                       2.81558194E-08, -8.15140597E-12, -5.88676392E+03,\n",
      "                       4.23478570E+00])))\n",
      "\n",
      "species(name=\"TS3_NH(T)\", atoms=\"N:1 H:1\", size=1.0,\n",
      "        thermo=(NASA([298.0, 400.44897959183675],\n",
      "                     [-1.65376613E+00,  2.82848511E-02, -5.94106428E-05,\n",
      "                       7.52504808E-08, -4.25776241E-11, -1.53188520E+03,\n",
      "                       5.19965813E+00]),\n",
      "                NASA([400.44897959183675, 800.0], \n",
      "                     [-8.31937647E-01,  1.97569615E-02, -2.61143696E-05,\n",
      "                       1.73007736E-08, -4.65869750E-12, -1.59548576E+03,\n",
      "                       2.01673518E+00])))\n",
      "\n",
      "species(name=\"TS4_N2(T)\", atoms=\"N:2\", size=1.0,\n",
      "        thermo=(NASA([298.0, 482.40816326530614],\n",
      "                     [-1.75107618E+00,  4.12189598E-02, -1.09828935E-04,\n",
      "                       1.41320046E-07, -7.17404084E-11,  9.94299867E+03,\n",
      "                       4.82385770E+00]),\n",
      "                NASA([482.40816326530614, 800.0], \n",
      "                     [ 1.52431744E+00,  1.40315985E-02, -2.40821843E-05,\n",
      "                       1.96281604E-08, -6.24114074E-12,  9.62301316E+03,\n",
      "                      -8.60900953E+00])))\n",
      "\n",
      "species(name=\"RU(T)\", atoms=\"Ru:1\", size=1.0,\n",
      "        thermo=(NASA([298.0, 554.1224489795918],\n",
      "                     [ 0.00000000E+00,  0.00000000E+00,  0.00000000E+00,\n",
      "                       0.00000000E+00,  0.00000000E+00,  0.00000000E+00,\n",
      "                       0.00000000E+00]),\n",
      "                NASA([554.1224489795918, 800.0], \n",
      "                     [ 0.00000000E+00,  0.00000000E+00,  0.00000000E+00,\n",
      "                       0.00000000E+00,  0.00000000E+00,  0.00000000E+00,\n",
      "                       0.00000000E+00])))\n",
      "\n",
      "species(name=\"N2(S)\", atoms=\"N:2\", size=1.0,\n",
      "        thermo=(NASA([298.0, 492.65306122448976],\n",
      "                     [-2.61113029E+00,  4.30280784E-02, -1.00995865E-04,\n",
      "                       1.19786985E-07, -5.75841652E-11, -8.73636880E+03,\n",
      "                       8.24537861E+00]),\n",
      "                NASA([492.65306122448976, 800.0], \n",
      "                     [ 7.86915518E-02,  2.11483916E-02, -3.33140389E-05,\n",
      "                       2.54979807E-08, -7.72804711E-12, -9.00472791E+03,\n",
      "                      -2.84148395E+00])))\n",
      "\n",
      "species(name=\"N(S)\", atoms=\"N:1\", size=1.0,\n",
      "        thermo=(NASA([298.0, 502.8979591836735],\n",
      "                     [-2.74170137E+00,  3.09262020E-02, -7.40012939E-05,\n",
      "                       8.66964232E-08, -4.04996423E-11, -1.22881492E+04,\n",
      "                       9.99157160E+00]),\n",
      "                NASA([502.8979591836735, 800.0], \n",
      "                     [-5.50172452E-01,  1.37232473E-02, -2.27404363E-05,\n",
      "                       1.79947600E-08, -5.57731485E-12, -1.25142150E+04,\n",
      "                       8.82855257E-01])))\n",
      "\n",
      "species(name=\"H(S)\", atoms=\"H:1\", size=1.0,\n",
      "        thermo=(NASA([298.0, 513.1428571428571],\n",
      "                     [ 7.34979861E-01, -4.31776899E-03,  3.00084652E-05,\n",
      "                      -4.65448309E-08,  2.42287475E-11, -6.01007912E+03,\n",
      "                      -3.11117109E+00]),\n",
      "                NASA([513.1428571428571, 800.0], \n",
      "                     [-9.38347043E-01,  8.57459192E-03, -7.59007082E-06,\n",
      "                       2.63648238E-09, -1.08356550E-13, -5.83470452E+03,\n",
      "                       3.87258564E+00])))\n",
      "\n",
      "species(name=\"NH3(S)\", atoms=\"N:1 H:3\", size=1.0,\n",
      "        thermo=(NASA([298.0, 461.9183673469388],\n",
      "                     [ 1.14054296E+00,  2.11528629E-02, -3.94113500E-05,\n",
      "                       5.04119756E-08, -2.79498362E-11, -1.71372331E+04,\n",
      "                      -4.81930148E+00]),\n",
      "                NASA([461.9183673469388, 800.0], \n",
      "                     [ 1.66079448E+00,  1.53778585E-02, -1.64435153E-05,\n",
      "                       1.09730315E-08, -3.04769119E-12, -1.71718653E+04,\n",
      "                      -6.78171189E+00])))\n",
      "\n",
      "species(name=\"NH2(S)\", atoms=\"N:1 H:2\", size=1.0,\n",
      "        thermo=(NASA([298.0, 513.1428571428571],\n",
      "                     [-2.26986613E+00,  3.69783572E-02, -7.37914233E-05,\n",
      "                       7.69637123E-08, -3.26409225E-11, -1.82944702E+04,\n",
      "                       7.98342065E+00]),\n",
      "                NASA([513.1428571428571, 800.0], \n",
      "                     [-5.94719805E-01,  2.42276179E-02, -3.69256529E-05,\n",
      "                       2.89797307E-08, -8.92777368E-12, -1.84727350E+04,\n",
      "                       9.69000209E-01])))\n",
      "\n",
      "species(name=\"NH(S)\", atoms=\"N:1 H:1\", size=1.0,\n",
      "        thermo=(NASA([298.0, 533.6326530612245],\n",
      "                     [-3.67269046E+00,  4.12908126E-02, -8.83354768E-05,\n",
      "                       9.30708814E-08, -3.90095812E-11, -1.35450272E+04,\n",
      "                       1.34062488E+01]),\n",
      "                NASA([533.6326530612245, 800.0], \n",
      "                     [-1.16677718E+00,  2.29677564E-02, -3.75818066E-05,\n",
      "                       2.99430978E-08, -9.26414211E-12, -1.38218900E+04,\n",
      "                       2.81582251E+00])))\n",
      "\n",
      "species(name=\"TS1_NH3(S)\", atoms=\"N:1 H:3\", size=1.0,\n",
      "        thermo=(NASA([298.0, 461.9183673469388],\n",
      "                     [-2.15711800E-01,  2.23671232E-02, -2.90792507E-05,\n",
      "                       2.46217683E-08, -1.04098955E-11, -8.98514743E+03,\n",
      "                       1.18397898E-01]),\n",
      "                NASA([461.9183673469388, 800.0], \n",
      "                     [-2.41469187E-01,  2.19587885E-02, -2.57139612E-05,\n",
      "                       1.67995163E-08, -4.53990713E-12, -8.97590560E+03,\n",
      "                       2.96197860E-01])))\n",
      "\n",
      "species(name=\"TS2_NH2(S)\", atoms=\"N:1 H:2\", size=1.0,\n",
      "        thermo=(NASA([298.0, 482.40816326530614],\n",
      "                     [-1.29806321E+00,  3.33296291E-02, -7.49082969E-05,\n",
      "                       9.09398161E-08, -4.50950303E-11, -5.20663944E+03,\n",
      "                       3.68685183E+00]),\n",
      "                NASA([482.40816326530614, 800.0], \n",
      "                     [ 6.60409671E-01,  1.69840135E-02, -2.30811277E-05,\n",
      "                       1.70174943E-08, -5.12349549E-12, -5.39692076E+03,\n",
      "                      -4.33432757E+00])))\n",
      "\n",
      "species(name=\"TS3_NH(S)\", atoms=\"N:1 H:1\", size=1.0,\n",
      "        thermo=(NASA([298.0, 482.40816326530614],\n",
      "                     [-3.19849368E+00,  4.08355096E-02, -1.04789990E-04,\n",
      "                       1.36204946E-07, -7.03581093E-11, -3.95925686E+03,\n",
      "                       1.12114765E+01]),\n",
      "                NASA([482.40816326530614, 800.0], \n",
      "                     [ 2.10817763E-02,  1.38454046E-02, -1.89560044E-05,\n",
      "                       1.35775840E-08, -4.02213306E-12, -4.27023844E+03,\n",
      "                      -1.95813214E+00])))\n",
      "\n",
      "species(name=\"TS4_N2(S)\", atoms=\"N:2\", size=1.0,\n",
      "        thermo=(NASA([298.0, 492.65306122448976],\n",
      "                     [-4.02990616E+00,  5.10850629E-02, -1.27788869E-04,\n",
      "                       1.55874918E-07, -7.55559553E-11, -2.23209290E+03,\n",
      "                       1.41653650E+01]),\n",
      "                NASA([492.65306122448976, 800.0], \n",
      "                     [-2.46781062E-01,  2.06356563E-02, -3.46960019E-05,\n",
      "                       2.78040159E-08, -8.71443394E-12, -2.61299814E+03,\n",
      "                      -1.46528582E+00])))\n",
      "\n",
      "species(name=\"RU(S)\", atoms=\"Ru:1\", size=1.0,\n",
      "        thermo=(NASA([298.0, 554.1224489795918],\n",
      "                     [ 0.00000000E+00,  0.00000000E+00,  0.00000000E+00,\n",
      "                       0.00000000E+00,  0.00000000E+00,  0.00000000E+00,\n",
      "                       0.00000000E+00]),\n",
      "                NASA([554.1224489795918, 800.0], \n",
      "                     [ 0.00000000E+00,  0.00000000E+00,  0.00000000E+00,\n",
      "                       0.00000000E+00,  0.00000000E+00,  0.00000000E+00,\n",
      "                       0.00000000E+00])))\n",
      "\n",
      "species(name=\"RU(B)\", atoms=\"Ru:1\", size=1.0,\n",
      "        thermo=(NASA([298.0, 554.1224489795918],\n",
      "                     [ 0.00000000E+00,  0.00000000E+00,  0.00000000E+00,\n",
      "                       0.00000000E+00,  0.00000000E+00,  0.00000000E+00,\n",
      "                       0.00000000E+00]),\n",
      "                NASA([554.1224489795918, 800.0], \n",
      "                     [ 0.00000000E+00,  0.00000000E+00,  0.00000000E+00,\n",
      "                       0.00000000E+00,  0.00000000E+00,  0.00000000E+00,\n",
      "                       0.00000000E+00])))\n",
      "\n",
      "species(name=\"Ar\", atoms=\"Ar:1\",\n",
      "        thermo=Shomate([298.0, 6000.0],\n",
      "                       [ 2.07860000E+01,  2.82591100E-07, -1.46419100E-07,\n",
      "                         1.09213100E-08, -3.66137100E-08, -6.19735000E+00,\n",
      "                         1.79999000E+02]))\n",
      "\n",
      "#-------------------------------------------------------------------------------\n",
      "# LATERAL INTERACTIONS\n",
      "#-------------------------------------------------------------------------------\n",
      "lateral_interaction(\"N(T) N(T)\", [-52.6], [0], id=\"0000\")\n",
      "lateral_interaction(\"N(T) H(T)\", [-17.7], [0], id=\"0001\")\n",
      "lateral_interaction(\"H(T) N(T)\", [-17.7], [0], id=\"0002\")\n",
      "lateral_interaction(\"H(T) H(T)\", [-3.], [0], id=\"0003\")\n",
      "lateral_interaction(\"NH2(T) N(T)\", [-20.7], [0], id=\"0004\")\n",
      "lateral_interaction(\"N(S) N(S)\", [-52.6], [0], id=\"0005\")\n",
      "lateral_interaction(\"N(S) H(S)\", [-17.7], [0], id=\"0006\")\n",
      "lateral_interaction(\"H(S) N(S)\", [-17.7], [0], id=\"0007\")\n",
      "lateral_interaction(\"H(S) H(S)\", [-3.], [0], id=\"0008\")\n",
      "lateral_interaction(\"NH2(S) N(S)\", [-20.7], [0], id=\"0009\")\n",
      "\n",
      "#-------------------------------------------------------------------------------\n",
      "# REACTION OPTIONS\n",
      "#-------------------------------------------------------------------------------\n",
      "enable_motz_wise()\n",
      "\n",
      "\n",
      "#-------------------------------------------------------------------------------\n",
      "# REACTIONS\n",
      "#-------------------------------------------------------------------------------\n",
      "surface_reaction(\"H2 + 2 RU(T) <=> 2 H(T) + 2 RU(B)\",\n",
      "                 stick( 5.00000e-01, 1,  0.00000e+00),\n",
      "                 id=\"0000\")\n",
      "surface_reaction(\"N2 + RU(T) <=> N2(T) + RU(B)\",\n",
      "                 stick( 5.00000e-01, 1,  0.00000e+00),\n",
      "                 id=\"0001\")\n",
      "surface_reaction(\"NH3 + RU(T) <=> NH3(T) + RU(B)\",\n",
      "                 stick( 5.00000e-01, 1,  0.00000e+00),\n",
      "                 id=\"0002\")\n",
      "surface_reaction(\"NH3(T) + RU(T) <=> NH2(T) + H(T) + RU(B)\",\n",
      "                 [ 9.61497e+18, 1,  1.80359e+01],\n",
      "                 id=\"NH2-H_cle_0001\")\n",
      "surface_reaction(\"NH2(T) + RU(T) <=> NH(T) + H(T) + RU(B)\",\n",
      "                 [ 9.61497e+18, 1,  1.04103e+01],\n",
      "                 id=\"NH-H_cle_0001\")\n",
      "surface_reaction(\"NH(T) + RU(T) <=> N(T) + H(T) + RU(B)\",\n",
      "                 [ 9.61497e+18, 1,  2.14907e+01],\n",
      "                 id=\"N-H_cle_0001\")\n",
      "surface_reaction(\"2 N(T) + RU(B) <=> N2(T) + RU(T)\",\n",
      "                 [ 9.61497e+18, 1,  6.64688e+01],\n",
      "                 id=\"0003\")\n",
      "surface_reaction(\"H2 + 2 RU(S) <=> 2 H(S) + 2 RU(B)\",\n",
      "                 stick( 5.00000e-01, 1,  0.00000e+00),\n",
      "                 id=\"0004\")\n",
      "surface_reaction(\"N2 + RU(S) <=> N2(S) + RU(B)\",\n",
      "                 stick( 5.00000e-01, 1,  0.00000e+00),\n",
      "                 id=\"0005\")\n",
      "surface_reaction(\"NH3 + RU(S) <=> NH3(S) + RU(B)\",\n",
      "                 stick( 5.00000e-01, 1,  0.00000e+00),\n",
      "                 id=\"0006\")\n",
      "surface_reaction(\"NH3(S) + RU(S) <=> NH2(S) + H(S) + RU(B)\",\n",
      "                 [ 4.69452e+19, 1,  1.30765e+01],\n",
      "                 id=\"NH2-H_cle_0002\")\n",
      "surface_reaction(\"NH2(S) + RU(S) <=> NH(S) + H(S) + RU(B)\",\n",
      "                 [ 4.69452e+19, 1,  1.83591e+01],\n",
      "                 id=\"NH-H_cle_0002\")\n",
      "surface_reaction(\"N(S) + H(S) + RU(B) <=> NH(S) + RU(S)\",\n",
      "                 [ 4.69452e+19, 1,  2.58874e+01],\n",
      "                 id=\"N-H_syn_0001\")\n",
      "surface_reaction(\"2 N(S) + RU(B) <=> N2(S) + RU(S)\",\n",
      "                 [ 4.69452e+19, 1,  4.45992e+01],\n",
      "                 id=\"0007\")\n",
      "\n",
      "#-------------------------------------------------------------------------------\n",
      "# BEP Relationships\n",
      "#-------------------------------------------------------------------------------\n",
      "bep(id=\"NH2-H\",\n",
      "    slope=0.71,\n",
      "    intercept=23.69,\n",
      "    direction=\"cleavage\",\n",
      "    cleavage_reactions=[\"NH2-H_cle_0001 to NH2-H_cle_0002\"],\n",
      "    synthesis_reactions=[])\n",
      "\n",
      "bep(id=\"NH-H\",\n",
      "    slope=0.52,\n",
      "    intercept=19.78,\n",
      "    direction=\"cleavage\",\n",
      "    cleavage_reactions=[\"NH-H_cle_0001 to NH-H_cle_0002\"],\n",
      "    synthesis_reactions=[])\n",
      "\n",
      "bep(id=\"N-H\",\n",
      "    slope=0.29,\n",
      "    intercept=23.23,\n",
      "    direction=\"cleavage\",\n",
      "    cleavage_reactions=[\"N-H_cle_0001\"],\n",
      "    synthesis_reactions=[\"N-H_syn_0001\"])\n",
      "\n"
     ]
    }
   ],
   "source": [
    "print(write_cti(reactions=reactions, species=species, phases=phases, units=units,\n",
    "                lateral_interactions=interactions, use_motz_wise=use_motz_wise))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Write YAML File\n",
    "\n",
    "The YAML file specifying the reactor configuration can also be written using the ``write_yaml`` function. Note that if:\n",
    "- ``units`` is not specified, float values are assumed to be in SI units\n",
    "- ``units`` is specified, float values are consistent with ``unit``'s attributes\n",
    "- you would like a quantity to have particular units, pass the value as a string with the units  (e.g. 10 cm3/s)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [],
   "source": [
    "from pmutt.io.omkm import write_yaml\n",
    "\n",
    "yaml_path = './outputs/cstr.yaml'\n",
    "\n",
    "write_yaml(filename=yaml_path, reactor_type='cstr', mode='isothermal',\n",
    "           V=1., T=900., P=1., cat_abyv=1500, end_time=50, flow_rate=1.,\n",
    "           transient=True, stepping='logarithmic', init_step=1e-15, atol=1e-15,\n",
    "           rtol=1e-10, output_format='csv', phases=phases, units=units)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "If you would prefer to return the file as a string instead of writing it, omit the ``filename``."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "# File generated by pMuTT (v 1.2.14) on 2019-12-05 16:55:39.951601\n",
      "# See documentation for OpenMKM YAML file here:\n",
      "# https://vlachosgroup.github.io/openmkm/input\n",
      "inlet_gas:\n",
      "    flow_rate: \"1.0 cm3/s\"\n",
      "phases:\n",
      "    bulk:\n",
      "        name: bulk\n",
      "    gas:\n",
      "        initial_state: \"NH3:1.0\"\n",
      "        name: gas\n",
      "    surfaces:\n",
      "    -   initial_state: \"RU(T):1.0\"\n",
      "        name: terrace\n",
      "    -   initial_state: \"RU(S):1.0\"\n",
      "        name: step\n",
      "reactor:\n",
      "    cat_abyv: \"1500 /cm\"\n",
      "    mode: \"isothermal\"\n",
      "    pressure: \"1.0 bar\"\n",
      "    temperature: 900.0\n",
      "    type: \"cstr\"\n",
      "    volume: \"1.0 cm3\"\n",
      "simulation:\n",
      "    end_time: \"50 s\"\n",
      "    init_step: 1.0e-15\n",
      "    output_format: \"csv\"\n",
      "    solver:\n",
      "        atol: 1.0e-15\n",
      "        rtol: 1.0e-10\n",
      "    stepping: \"logarithmic\"\n",
      "    transient: true\n",
      "\n"
     ]
    }
   ],
   "source": [
    "print(write_yaml(reactor_type='cstr', mode='isothermal', V=1., T=900., P=1., cat_abyv=1500,\n",
    "                 end_time=50, flow_rate=1., transient=True, stepping='logarithmic',\n",
    "                 init_step=1e-15, atol=1e-15, rtol=1e-10, output_format='csv', phases=phases,\n",
    "                 units=units))"
   ]
  }
 ],
 "metadata": {
  "file_extension": ".py",
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.2"
  },
  "mimetype": "text/x-python",
  "name": "python",
  "npconvert_exporter": "python",
  "pygments_lexer": "ipython3",
  "version": 3
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
