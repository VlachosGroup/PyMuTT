{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Experimental Data to Empirical Object\n",
    "In this example, we will take experimental data (heat capacity, enthalpy of formation, and standard entropy) and convert it to a Shomate polynomial. We will then showcase some of the features of the object (such as calculating thermodynamic data). Note that even though we use a Shomate object in this example, the pMuTT Nasa object has the same functionality.\n",
    "\n",
    "## Topics Covered\n",
    "- Using pMuTT's constants for unit conversions\n",
    "- Create a Shomate object from experimental data\n",
    "- Calculate thermodynamic properties using the Shomate object\n",
    "- Plot the shape of the Shomate curve\n",
    "- Save the Shomate object as a JSON file\n",
    "\n",
    "## Import Experimental Data\n",
    "First, we need to initialize the experimental data. We will need: \n",
    "1. A range of temperatures in K\n",
    "2. Dimensionless heat capacities corresponding to the temperatures in (1)\n",
    "3. A reference temperature in K\n",
    "4. A dimensionless enthalpy corresponding to the reference temperature in (3)\n",
    "5. A dimensionless entropy corresponding to the reference temperature in (3)\n",
    "\n",
    "For this example, we will be thermodynamic data for methanol. Heat capacities and standard enthalpy were found on the [NIST webbook](https://webbook.nist.gov/cgi/cbook.cgi?ID=C67561&Units=SI&Mask=1#Thermo-Gas). The standard entropy was found on [Wikipedia](https://en.wikipedia.org/wiki/Methanol_(data_page%29)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "from pmutt import constants as c\n",
    "\n",
    "T = np.array([50, 100, 150, 200, 273.15, 298.15, 300, 400, 500, 600, 700, \n",
    "              800, 900, 1000, 1100, 1200, 1300, 1400, 1500, 1750, 2000, \n",
    "              2250, 2500, 2750, 3000]) # K\n",
    "Cp = np.array([34.00, 36.95, 38.64, 39.71, 42.59, 44.06, 44.17, 51.63, 59.7, \n",
    "               67.19, 73.86, 79.76, 84.95, 89.54, 93.57, 97.12, 100.24, \n",
    "               102.98, 105.4, 110.2, 113.8, 116.5, 118.6, 120, 121]) # J/mol/K\n",
    "CpoR = Cp/c.R('J/mol/K')\n",
    "\n",
    "T_ref = c.T0('K')\n",
    "H_ref = -205. # kJ/mol\n",
    "HoRT_ref = H_ref/c.R('kJ/mol/K')/T_ref\n",
    "\n",
    "S_ref = 239.9 # J/mol/K\n",
    "SoR_ref = S_ref/c.R('J/mol/K')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Note that the ``pmutt.constants`` module contains functions for standard constants for easy use such as the molar gas constant (``pmutt.constants.R``) and standard temperature (``~pmutt.constants.T_ref``). The functions take a unit as an argument so that the code is more readable."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Fitting the Shomate polynomial to the experimental data\n",
    "The Shomate polynomial can be created easily by feeding the data to the ``from_data`` method as shown below."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<pmutt.empirical.shomate.Shomate object at 0x0000027884A53C18>\n"
     ]
    }
   ],
   "source": [
    "from pmutt.empirical.shomate import Shomate\n",
    "\n",
    "CH3OH_shomate = Shomate.from_data(name='CH3OH', T=T, CpoR=CpoR,\n",
    "                                  T_ref=T_ref, HoRT_ref=HoRT_ref,\n",
    "                                  SoR_ref=SoR_ref)\n",
    "print(CH3OH_shomate)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Calculating thermodynamic properties\n",
    "Now that we've fit our Shomate polynomial to experimental data, we can calculate thermodynamic quantities for a range of temperatures. Let's compare our Shomate's estimates to the experimental data fed."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "Cp_shomate = CH3OH_shomate.get_Cp(T=T, units='J/mol/K')\n",
    "H_shomate = CH3OH_shomate.get_H(T=T_ref, units='kJ/mol')\n",
    "S_shomate = CH3OH_shomate.get_S(T=T_ref, units='J/mol/K')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Compare the Shomate polynomial to the experimental data\n",
    "Now that we've calculated the Shomate estimates for heat capacity, enthalpy and entropy, we can compare the experimental values to the computational values.\n",
    "\n",
    "### Compare using a table"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "T(K)\tCp expt (J/mol/K)\tCp shomate (J/mol/K)\n",
      "50.0\t34.0\t35.30563835872584\n",
      "100.0\t36.95\t32.32192279373721\n",
      "150.0\t38.64\t35.32473706834148\n",
      "200.0\t39.71\t39.08564636087708\n",
      "273.15\t42.59\t44.74865575718067\n",
      "298.15\t44.06\t46.65934752980477\n",
      "300.0\t44.17\t46.7998640327272\n",
      "400.0\t51.63\t54.17789257686792\n",
      "500.0\t59.7\t61.07969938523044\n",
      "600.0\t67.19\t67.4866126822503\n",
      "700.0\t73.86\t73.40609469288819\n",
      "800.0\t79.76\t78.85353965288512\n",
      "900.0\t84.95\t83.847313583687\n",
      "1000.0\t89.54\t88.40706912072102\n",
      "1100.0\t93.57\t92.55307834221774\n",
      "1200.0\t97.12\t96.30593692583267\n",
      "1300.0\t100.24\t99.686420927887\n",
      "1400.0\t102.98\t102.71541240842613\n",
      "1500.0\t105.4\t105.41385852241058\n",
      "1750.0\t110.2\t110.85164071638519\n",
      "2000.0\t113.8\t114.68330178930806\n",
      "2250.0\t116.5\t117.23784991996942\n",
      "2500.0\t118.6\t118.84449914539641\n",
      "2750.0\t120.0\t119.83256261346503\n",
      "3000.0\t121.0\t120.5314052479589\n",
      "-\n",
      "T_ref: 298.15 K\n",
      "-\n",
      "H expt: -205.0 kJ/mol\n",
      "H shomate: -205.0 kJ/mol\n",
      "-\n",
      "S expt: 239.9 J/mol/K\n",
      "S shomate: 239.9 J/mol/K\n"
     ]
    }
   ],
   "source": [
    "print('T(K)\\tCp expt (J/mol/K)\\tCp shomate (J/mol/K)')\n",
    "for T_i, Cp1, Cp2 in zip(T, Cp, Cp_shomate):\n",
    "    print('{}\\t{}\\t{}'.format(T_i, Cp1, Cp2))\n",
    "\n",
    "print('-')\n",
    "print('T_ref: {} K'.format(T_ref))\n",
    "print('-')\n",
    "print('H expt: {} kJ/mol'.format(H_ref))\n",
    "print('H shomate: {} kJ/mol'.format(H_shomate))\n",
    "print('-')\n",
    "print('S expt: {} J/mol/K'.format(S_ref))\n",
    "print('S shomate: {} J/mol/K'.format(S_shomate))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Compare using a plot"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 720x576 with 4 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, axes = CH3OH_shomate.plot_empirical(Cp_units='J/mol/K', \n",
    "                                         H_units='kJ/mol', \n",
    "                                         S_units='J/mol/K', \n",
    "                                         G_units='kJ/mol')\n",
    "# Add experimental data to plot\n",
    "axes[0].plot(T, Cp, 'ko')\n",
    "axes[1].plot(T_ref, H_ref, 'ko')\n",
    "axes[2].plot(T_ref, S_ref, 'ko')\n",
    "axes[3].plot(T_ref, H_ref - T_ref * S_ref * c.convert_unit(initial='J', final='kJ'), 'ko')\n",
    "\n",
    "# Add legend to plot\n",
    "axes[0].legend(['Shomate', 'Expt'])\n",
    "axes[1].legend(['Shomate', 'Expt'])\n",
    "axes[2].legend(['Shomate', 'Expt'])\n",
    "axes[3].legend(['Shomate', 'Expt'])\n",
    "\n",
    "# Adjust figure size so it's viewable\n",
    "fig.set_size_inches((10, 8))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Note that in this code's section, we showcase the ``pmutt.constants.convert_unit`` function. Similarly to the ``c.R`` and ``c.T0`` functions shown above, this helps to increase code readability.\n",
    "\n",
    "## Save the Shomate polynomial as a JSON file\n",
    "If we would like to save our Shomate object, we can save it in JSON format with the help of the ``pmutt.io.json.pmuttEncoder``."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "import json\n",
    "from pmutt.io.json import pmuttEncoder\n",
    "\n",
    "with open('CH3OH_shomate.json', 'w') as f_ptr:\n",
    "    json.dump(CH3OH_shomate, f_ptr, cls=pmuttEncoder, indent=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "This block will save the Shomate object to ``CH3OH_shomate.json``. Upon opening, the file will look like this:\n",
    "```\n",
    "{\n",
    " \"class\": \"<class 'pmutt.empirical.shomate.Shomate'>\",\n",
    " \"type\": \"shomate\",\n",
    " \"name\": \"CH3OH\",\n",
    " \"phase\": null,\n",
    " \"elements\": null,\n",
    " \"notes\": null,\n",
    " \"smiles\": null,\n",
    " \"model\": null,\n",
    " \"misc_models\": null,\n",
    " \"a\": [\n",
    "  20.55906255664672,\n",
    "  95.61493361898438,\n",
    "  -31.306096062902366,\n",
    "  3.5140598702327708,\n",
    "  0.025109137759508435,\n",
    "  -215.02560497018567,\n",
    "  237.7737728103737,\n",
    "  205.00000000000006\n",
    " ],\n",
    " \"T_low\": 50.0,\n",
    " \"T_high\": 3000.0\n",
    "}\n",
    "```"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Loading the Shomate polynomial from a JSON file\n",
    "Now that we've saved the Shomate object, we can open it using ``pmutt.io.json.json_to_pmutt``."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<pmutt.empirical.shomate.Shomate object at 0x000002789396B978>\n"
     ]
    }
   ],
   "source": [
    "from pmutt.io.json import json_to_pmutt\n",
    "\n",
    "with open('CH3OH_shomate.json', 'r') as f_ptr:\n",
    "    CH3OH_json = json.load(f_ptr, object_hook=json_to_pmutt)\n",
    "\n",
    "print(CH3OH_json)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
